<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>